@use './variables' as *;
@use './mixins' as *;

// Theme variables
:root[data-theme='dark'] {
  --color-bg-primary: #{$color-bg-dark};
  --color-bg-secondary: #{$color-bg-darker};
  --color-text-primary: #{$color-text-inverse};
  --color-text-secondary: #{rgba($color-text-inverse, 0.8)};
  --gradient-dark: linear-gradient(135deg, #0a1628 0%, #0f1d35 50%, #1a2942 100%);
  --shadow-color: rgba(0, 0, 0, 0.3);
  --color-bg-primary-rgb: 10, 22, 40;
}

:root[data-theme='light'] {
  --color-bg-primary: #f8f6f3;
  --color-bg-secondary: #ffffff;
  --color-text-primary: #{$color-bg-dark};
  --color-text-secondary: rgba(10, 22, 40, 0.8);
  --gradient-dark: linear-gradient(135deg, #f8f6f3 0%, #ffffff 50%, #f4f2ef 100%);
  --shadow-color: rgba(0, 0, 0, 0.1);
  --color-bg-primary-rgb: 248, 246, 243;
}

// CSS Reset
*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  scroll-behavior: smooth;
  scroll-padding-top: 2rem;
}

body {
  font-family: $font-family-base;
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: $line-height-normal;
  color: var(--color-text-primary);
  background-color: var(--color-bg-primary);
  min-height: 100vh;
  overflow-x: hidden;
  position: relative;
  transition: background-color 0.3s ease, color 0.3s ease;

  // Smooth gradient background overlay - Gold & Navy theme
  &::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at 20% 50%, rgba(212, 165, 116, 0.03) 0%, transparent 50%),
                radial-gradient(circle at 80% 80%, rgba(193, 122, 46, 0.03) 0%, transparent 50%),
                radial-gradient(circle at 40% 10%, rgba(10, 22, 40, 0.02) 0%, transparent 50%);
    pointer-events: none;
    z-index: 0;
    transition: opacity 0.3s ease;
  }
}

// Main wrapper
main {
  position: relative;
  z-index: 1;
}

// Typography
h1, h2, h3, h4, h5, h6 {
  font-family: $font-family-heading;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
  color: var(--color-text-primary);
}

p {
  margin-bottom: $spacing-md;

  &:last-child {
    margin-bottom: 0;
  }
}

a {
  color: $color-primary;
  text-decoration: none;
  @include transition(color);

  &:hover {
    color: $color-primary-dark;
  }
}

// Images
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
  height: auto;
}

// Forms
input, button, textarea, select {
  font: inherit;
}

button {
  cursor: pointer;
}

// Remove default button styles
button:focus-visible,
a:focus-visible {
  outline: 2px solid $color-primary;
  outline-offset: 2px;
}

// Utility classes
.container {
  @include container;
}

.visually-hidden {
  @include visually-hidden;
}

// Advanced Keyframe Animations
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-40px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(40px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes shimmer {
  0% {
    background-position: -1000px 0;
  }
  100% {
    background-position: 1000px 0;
  }
}

@keyframes gradientShift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

@keyframes rotateHue {
  from {
    filter: hue-rotate(0deg);
  }
  to {
    filter: hue-rotate(360deg);
  }
}
